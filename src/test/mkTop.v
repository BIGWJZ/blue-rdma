//
// Generated by Bluespec Compiler, version 2023.01 (build 52adafa5)
//
// On Tue Nov 14 11:17:06 CST 2023
//
//
// Ports:
// Name                         I/O  size props
// foo                            O     1 reg
// RDY_foo                        O     1 const
// CLK                            I     1 clock
// RST_N                          I     1 unused
//
// No combinational paths from inputs to outputs
//
//

`ifdef BSV_ASSIGNMENT_DELAY
`else
  `define BSV_ASSIGNMENT_DELAY
`endif

`ifdef BSV_POSITIVE_RESET
  `define BSV_RESET_VALUE 1'b1
  `define BSV_RESET_EDGE posedge
`else
  `define BSV_RESET_VALUE 1'b0
  `define BSV_RESET_EDGE negedge
`endif

module mkTop(CLK,
	     RST_N,

	     foo,
	     RDY_foo);
  input  CLK;
  input  RST_N;

  // value method foo
  output foo;
  output RDY_foo;

  // signals for module outputs
  wire RDY_foo, foo;

  // register a
  reg [511 : 0] a;
  wire [511 : 0] a$D_IN;
  wire a$EN;

  // register b
  reg b;
  wire b$D_IN, b$EN;

  // value method foo
  assign foo = b ;
  assign RDY_foo = 1'd1 ;

  // register a
  assign a$D_IN = a + 512'd1 ;
  assign a$EN = 1'd1 ;

  // register b
  assign b$D_IN = ~a == 512'd0 ;
  assign b$EN = 1'd1 ;

  // handling of inlined registers

  always@(posedge CLK)
  begin
    if (a$EN) a <= `BSV_ASSIGNMENT_DELAY a$D_IN;
    if (b$EN) b <= `BSV_ASSIGNMENT_DELAY b$D_IN;
  end

  // synopsys translate_off
  `ifdef BSV_NO_INITIAL_BLOCKS
  `else // not BSV_NO_INITIAL_BLOCKS
  initial
  begin
    a = 512'hAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
    b = 1'h0;
  end
  `endif // BSV_NO_INITIAL_BLOCKS
  // synopsys translate_on
endmodule  // mkTop

